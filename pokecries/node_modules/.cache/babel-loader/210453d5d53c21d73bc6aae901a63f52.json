{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\palha\\\\OneDrive\\\\Documents\\\\1 - Learn\\\\Programing\\\\Visual Studio react\\\\pokecries\\\\src\\\\gameModes\\\\GuessTheCry\\\\Guessthecry.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Outlet, Link } from \"react-router-dom\";\nimport pokemonData from \"../../pokemonData.js\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EasyMode() {\n  _s();\n  //game set\n  let [game, setGame] = useState({\n    round: 1,\n    options: {\n      currentOptions: [],\n      correctAnswer: null\n    }\n  });\n\n  //pokedex\n  const [allPokemon, setAllPokemon] = useState();\n  useEffect(() => {\n    const controller = new AbortController();\n    async function getAllPokemon(dexLimit) {\n      try {\n        const res = await axios.get(`https://pokeapi.co/api/v2/pokemon/?limit=${dexLimit}`, {\n          signal: controller.signal\n        });\n        const pokemonData = res.data.results;\n        setAllPokemon(pokemonData.map((pokemon, index) => ({\n          id: index + 1,\n          name: pokemon.name\n        })));\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getAllPokemon(905);\n    return () => controller.abort();\n  }, []);\n  function generateOptions(totalOptions) {\n    let options = game.options.currentOptions;\n    let pokemonArray = [];\n    while (options.length < totalOptions) {\n      let randomOption = Math.floor(Math.random() * allPokemon.length);\n      pokemonArray.push(allPokemon[randomOption]);\n    }\n    let answerNumber = options[Math.floor(Math.random() * options.length)];\n    let correctAnswer = allPokemon[answerNumber];\n    setGame(prevGame => ({\n      ...prevGame,\n      options: pokemonArray\n    }));\n  }\n\n  //cry audio\n  let audio = new Audio(require(`../pokecries/${correctAnswer}.ogg`));\n  function checkAnswer(num) {\n    if (pokemonData[options[num]].id === correctAnswer) {\n      setGame(prevGame => ({\n        ...prevGame,\n        round: prevGame.round + 1\n      }));\n      console.log(\"Correct\");\n    } else {\n      setGame(prevGame => ({\n        ...prevGame,\n        round: 1\n      }));\n      console.log(\"Wrong\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Round \", game.round]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"audioPlayer\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"audio-btn\",\n        onClick: () => audio.play(),\n        children: \"Sound\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-bottom\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"choice-btn\",\n        onClick: () => checkAnswer(0),\n        children: pokemonData[options[0]].name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"choice-btn\",\n        onClick: () => checkAnswer(1),\n        children: pokemonData[options[1]].name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"choice-btn\",\n        onClick: () => checkAnswer(2),\n        children: pokemonData[options[2]].name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"choice-btn\",\n        onClick: () => checkAnswer(3),\n        children: pokemonData[options[3]].name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/ChooseGamemode\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"back-btn\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 40\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(EasyMode, \"WO6tR7TBDrSpSuc+2ZtaRSNTq4c=\");\n_c = EasyMode;\nvar _c;\n$RefreshReg$(_c, \"EasyMode\");","map":{"version":3,"names":["React","useState","useEffect","Outlet","Link","pokemonData","axios","EasyMode","game","setGame","round","options","currentOptions","correctAnswer","allPokemon","setAllPokemon","controller","AbortController","getAllPokemon","dexLimit","res","get","signal","data","results","map","pokemon","index","id","name","error","console","log","abort","generateOptions","totalOptions","pokemonArray","length","randomOption","Math","floor","random","push","answerNumber","prevGame","audio","Audio","require","checkAnswer","num","play"],"sources":["C:/Users/palha/OneDrive/Documents/1 - Learn/Programing/Visual Studio react/pokecries/src/gameModes/GuessTheCry/Guessthecry.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\"\r\nimport { Outlet, Link } from \"react-router-dom\";\r\nimport pokemonData from \"../../pokemonData.js\"\r\nimport axios from \"axios\"\r\n\r\nexport default function EasyMode(){\r\n    //game set\r\n    let [game, setGame] = useState({round: 1, options: {currentOptions: [], correctAnswer: null}})\r\n\r\n    //pokedex\r\n    const [allPokemon, setAllPokemon] = useState()\r\n\r\n    useEffect(()=> {\r\n        const controller = new AbortController()\r\n        async function getAllPokemon(dexLimit){\r\n            try{\r\n                const res = await axios.get(`https://pokeapi.co/api/v2/pokemon/?limit=${dexLimit}`, {signal: controller.signal})\r\n                const pokemonData = res.data.results\r\n                setAllPokemon(\r\n                    pokemonData.map((pokemon, index) => ({id: index + 1, name: pokemon.name}))\r\n                )\r\n            } catch(error){\r\n                console.log(error)\r\n            }\r\n        }\r\n        getAllPokemon(905)\r\n        return ()=> controller.abort()\r\n    },[])\r\n\r\n\r\n    function generateOptions(totalOptions){\r\n        let options = game.options.currentOptions\r\n        let pokemonArray = []\r\n        while(options.length<totalOptions){\r\n            let randomOption = Math.floor(Math.random() * allPokemon.length) \r\n            pokemonArray.push(allPokemon[randomOption]) \r\n            \r\n        }    \r\n        let answerNumber = options[Math.floor(Math.random()* options.length)]\r\n        let correctAnswer = allPokemon[answerNumber]\r\n\r\n        setGame(prevGame => ({...prevGame, options: pokemonArray}))\r\n    }\r\n\r\n\r\n\r\n    //cry audio\r\n    let audio = new Audio(require(`../pokecries/${correctAnswer}.ogg`))\r\n\r\n    \r\n    function checkAnswer(num){\r\n        if(pokemonData[options[num]].id === correctAnswer){\r\n            setGame(prevGame => ({...prevGame, round: prevGame.round + 1}))\r\n            console.log(\"Correct\") \r\n            \r\n        }else {\r\n            setGame(prevGame => ({...prevGame, round: 1}))\r\n            console.log(\"Wrong\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <>\r\n            <h1>Round {game.round}</h1>\r\n            <div className=\"audioPlayer\">\r\n                <button id=\"audio-btn\" onClick={()=> audio.play()}>Sound</button>\r\n            </div>\r\n\r\n            <div className=\"page-bottom\">\r\n                <button className=\"choice-btn\" onClick={()=>checkAnswer(0)}>{pokemonData[options[0]].name}</button>\r\n                <button className=\"choice-btn\" onClick={()=>checkAnswer(1)}>{pokemonData[options[1]].name}</button>\r\n                <button className=\"choice-btn\" onClick={()=>checkAnswer(2)}>{pokemonData[options[2]].name}</button>\r\n                <button className=\"choice-btn\" onClick={()=>checkAnswer(3)}>{pokemonData[options[3]].name}</button>\r\n        \r\n            </div>\r\n\r\n            <Link to=\"/ChooseGamemode\"><button id=\"back-btn\">Back</button></Link>\r\n\r\n        </>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}