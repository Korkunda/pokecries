{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\palha\\\\OneDrive\\\\Documents\\\\1 - Learn\\\\Programing\\\\Visual Studio react\\\\pokecries\\\\src\\\\gameModes\\\\EasyMode.js\";\nimport React, { useState } from \"react\";\nimport { Outlet, Link } from \"react-router-dom\";\nimport pokemonData from \"../pokemonData.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EasyMode() {\n  function generateOptions() {\n    //pokemon list (number [0, 1, ...])\n    let pokemonArray = [];\n    for (let i = 0; i < pokemonData.length; i++) {\n      pokemonArray.push(i);\n    }\n    console.log(pokemonArray);\n\n    //options\n    let options = [];\n    let totaloptionsToGenerate = 4;\n\n    //set random pokemon\n    while (options.length < totaloptionsToGenerate) {\n      let randomOption = Math.floor(Math.random() * pokemonArray.length);\n      options.push(pokemonArray[randomOption]);\n      pokemonArray.splice(randomOption, 1);\n    }\n  }\n  // if(pokemonData[options])\n\n  let round = [];\n  let currentRound = round.length + 1;\n\n  //setCorrectChoice\n  let correctAnswer = Math.floor(Math.random() * options.length);\n  function checkAnswer(num) {\n    if (pokemonData[options[num]] === correctAnswer) {\n      return generateOptions();\n    } else {}\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Round \", currentRound]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-bottom\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"choice-btn\",\n        onClick: checkAnswer,\n        children: pokemonData[options[0]].name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"choice-btn\",\n        onClick: checkAnswer,\n        children: pokemonData[options[1]].name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"choice-btn\",\n        onClick: checkAnswer,\n        children: pokemonData[options[2]].name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"choice-btn\",\n        onClick: checkAnswer,\n        children: pokemonData[options[3]].name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_c = EasyMode;\nvar _c;\n$RefreshReg$(_c, \"EasyMode\");","map":{"version":3,"names":["React","useState","Outlet","Link","pokemonData","EasyMode","generateOptions","pokemonArray","i","length","push","console","log","options","totaloptionsToGenerate","randomOption","Math","floor","random","splice","round","currentRound","correctAnswer","checkAnswer","num","name"],"sources":["C:/Users/palha/OneDrive/Documents/1 - Learn/Programing/Visual Studio react/pokecries/src/gameModes/EasyMode.js"],"sourcesContent":["import React, {useState} from \"react\"\r\nimport { Outlet, Link } from \"react-router-dom\";\r\nimport pokemonData from \"../pokemonData.js\"\r\n\r\nexport default function EasyMode(){\r\n\r\n    function generateOptions(){\r\n        //pokemon list (number [0, 1, ...])\r\n        let pokemonArray = []\r\n        for(let i = 0; i < pokemonData.length; i++){\r\n            pokemonArray.push(i)\r\n        }\r\n        console.log(pokemonArray)\r\n        \r\n        //options\r\n        let options = []\r\n        let totaloptionsToGenerate = 4\r\n        \r\n        //set random pokemon\r\n        while(options.length<totaloptionsToGenerate){\r\n            let randomOption = Math.floor(Math.random() * pokemonArray.length) \r\n            options.push(pokemonArray[randomOption]) \r\n            pokemonArray.splice(randomOption,1) \r\n            \r\n        }\r\n        \r\n    }\r\n        // if(pokemonData[options])\r\n\r\n        let round = []\r\n        let currentRound = round.length + 1\r\n        \r\n        //setCorrectChoice\r\n        let correctAnswer = Math.floor(Math.random()* options.length)\r\n        function checkAnswer(num){\r\n            if(pokemonData[options[num]] === correctAnswer){\r\n                return generateOptions()\r\n            } else {\r\n                \r\n            }\r\n        }\r\n\r\n    return(\r\n        <>\r\n            <h1>Round {currentRound}</h1>\r\n            <div className=\"page-bottom\">\r\n                <button className=\"choice-btn\" onClick={checkAnswer}>{pokemonData[options[0]].name}</button>\r\n                <button className=\"choice-btn\" onClick={checkAnswer}>{pokemonData[options[1]].name}</button>\r\n                <button className=\"choice-btn\" onClick={checkAnswer}>{pokemonData[options[2]].name}</button>\r\n                <button className=\"choice-btn\" onClick={checkAnswer}>{pokemonData[options[3]].name}</button>\r\n        \r\n            </div>\r\n\r\n        </>\r\n    )\r\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAASC,MAAM,EAAEC,IAAI,QAAQ,kBAAkB;AAC/C,OAAOC,WAAW,MAAM,mBAAmB;AAAA;AAAA;AAE3C,eAAe,SAASC,QAAQ,GAAE;EAE9B,SAASC,eAAe,GAAE;IACtB;IACA,IAAIC,YAAY,GAAG,EAAE;IACrB,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,WAAW,CAACK,MAAM,EAAED,CAAC,EAAE,EAAC;MACvCD,YAAY,CAACG,IAAI,CAACF,CAAC,CAAC;IACxB;IACAG,OAAO,CAACC,GAAG,CAACL,YAAY,CAAC;;IAEzB;IACA,IAAIM,OAAO,GAAG,EAAE;IAChB,IAAIC,sBAAsB,GAAG,CAAC;;IAE9B;IACA,OAAMD,OAAO,CAACJ,MAAM,GAACK,sBAAsB,EAAC;MACxC,IAAIC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGX,YAAY,CAACE,MAAM,CAAC;MAClEI,OAAO,CAACH,IAAI,CAACH,YAAY,CAACQ,YAAY,CAAC,CAAC;MACxCR,YAAY,CAACY,MAAM,CAACJ,YAAY,EAAC,CAAC,CAAC;IAEvC;EAEJ;EACI;;EAEA,IAAIK,KAAK,GAAG,EAAE;EACd,IAAIC,YAAY,GAAGD,KAAK,CAACX,MAAM,GAAG,CAAC;;EAEnC;EACA,IAAIa,aAAa,GAAGN,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAEL,OAAO,CAACJ,MAAM,CAAC;EAC7D,SAASc,WAAW,CAACC,GAAG,EAAC;IACrB,IAAGpB,WAAW,CAACS,OAAO,CAACW,GAAG,CAAC,CAAC,KAAKF,aAAa,EAAC;MAC3C,OAAOhB,eAAe,EAAE;IAC5B,CAAC,MAAM,CAEP;EACJ;EAEJ,oBACI;IAAA,wBACI;MAAA,qBAAWe,YAAY;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,eAC7B;MAAK,SAAS,EAAC,aAAa;MAAA,wBACxB;QAAQ,SAAS,EAAC,YAAY;QAAC,OAAO,EAAEE,WAAY;QAAA,UAAEnB,WAAW,CAACS,OAAO,CAAC,CAAC,CAAC,CAAC,CAACY;MAAI;QAAA;QAAA;QAAA;MAAA,QAAU,eAC5F;QAAQ,SAAS,EAAC,YAAY;QAAC,OAAO,EAAEF,WAAY;QAAA,UAAEnB,WAAW,CAACS,OAAO,CAAC,CAAC,CAAC,CAAC,CAACY;MAAI;QAAA;QAAA;QAAA;MAAA,QAAU,eAC5F;QAAQ,SAAS,EAAC,YAAY;QAAC,OAAO,EAAEF,WAAY;QAAA,UAAEnB,WAAW,CAACS,OAAO,CAAC,CAAC,CAAC,CAAC,CAACY;MAAI;QAAA;QAAA;QAAA;MAAA,QAAU,eAC5F;QAAQ,SAAS,EAAC,YAAY;QAAC,OAAO,EAAEF,WAAY;QAAA,UAAEnB,WAAW,CAACS,OAAO,CAAC,CAAC,CAAC,CAAC,CAACY;MAAI;QAAA;QAAA;QAAA;MAAA,QAAU;IAAA;MAAA;MAAA;MAAA;IAAA,QAE1F;EAAA,gBAEP;AAEX;AAAC,KAnDuBpB,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module"}